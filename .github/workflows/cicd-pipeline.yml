name: CI/CD Pipeline

on:
  push:
    branches:
      - develop

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production

    outputs:
      eks_cluster_name: ${{ steps.terraform.outputs.eks_cluster_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify your AWS region here

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        run: terraform init ./terraform

      - name: Terraform Plan
        run: terraform plan -out=tfplan ./terraform

      - name: Terraform Apply
        id: terraform
        run: terraform apply -auto-approve tfplan

      - name: Get EKS Cluster Name
        id: get_eks_cluster_name
        run: echo "eks_cluster_name=$(terraform output -raw eks_cluster_name)" >> $GITHUB_ENV

  build:
    needs: terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t mydockerhub/hello-world:latest .

      - name: Push Docker image to Docker Hub
        run: |
          docker push mydockerhub/hello-world:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-west-2  # Specify your AWS region here

      - name: Set up kubectl
        uses: aws-actions/eks-update-kubeconfig@v1
        with:
          cluster-name: ${{ env.eks_cluster_name }}  # Using the output from Terraform dynamically

      - name: Set up HashiCorp Vault
        uses: hashicorp/vault-action@v2
        with:
          url: ${{ secrets.VAULT_URL }}
          token: ${{ secrets.VAULT_TOKEN }}

      - name: Deploy to Kubernetes with Helm
        run: |
          helm upgrade --install hello-world ./k8s/hello-world-chart \
            --namespace custom-namespace \
            --set image.repository=mydockerhub/hello-world \
            --set image.tag=latest
